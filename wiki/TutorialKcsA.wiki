#summary Tutorial for embedding KcsA (PDB-ID: 1R3J)

= Tutorial for embedding KcsA =

KcsA is a transmembrane pore-forming channel, selective for potassium ions.
We have chosen it for this tutorial because of its conical transmembrane shape, representing special advantages for the protein embedding procedure:
to preserve correct lipid densities in both leaflet, a different number of lipids have to be removed.

<wiki:toc max_depth="2" />

----

== System requirements ==

For executing this tutorial one-to-one you need the following system configuration:
 * *Internet access*
 * *Linux* and a *Linux-Shell*, e.g. _Ubuntu Linux_ & {{{bash}}}
 * any *text editor*, e.g. {{{gedit}}}
 * *wget* (typically part of Linux)
 * *gunzip* (typically part of Linux)
 * the *sed* stream editor (typically part of Linux)
 * the *GROMACS 4.5.5* MD package
 * *LAMBADA* for membrane protein orientation and
 * *InflateGRO2* for protein embedding

----

== Protein preparation ==

*Download* the protein structure from the RCSB Protein Databank (PDB).
Since we want to simulate the protein in its physiological relevant tetrameric structure, we have to download the biological assembly:
<code language="bash">
wget "http://www.rcsb.org/pdb/files/1R3J.pdb1.gz"</code>

*Unpack* this archive and combine the subunits to one structure:
<code language="bash">
gunzip 1R3J.pdb1.gz
sed -e 's/ENDMDL.*//g;s/MODEL.*//g;/^$/d' <1R3J.pdb1 >1r3j.pdb</code>

*Extract* the protein and adjust the box dimensions:
<code language="bash">
echo q | make_ndx -f 1r3j.pdb -o 1r3j.ndx
echo "1 1" | editconf -f 1r3j.pdb -n 1r3j.ndx -o kcsa.pdb -d 2</code>


*Convert* the structure to the world of GROMACS:
<code language="bash">echo 1 | pdb2gmx -f kcsa.pdb -p kcsa.top -i posre.kcsa -o kcsa.gro -ff gromos53a6 -missing</code>
For this tutorial we need to allow missing atoms using the {{{-missing}}} parameter.


*NOTE:* MD simulation works only if the protein structure is complete. This structure is not. For a real setup you have to do additional steps to complete the structure (see the [http://www.gromacs.org/Documentation/Errors#WARNING.3a_atom_X_is_missing_in_residue_XXX_Y_in_the_pdb_file GROMACS help] for this).

touch empty.mdp
grompp -f empty.mdp -c 1bl8.gro -p kcsa.top -o test.tpr

editconf -f 1bl8.gro -o protein.gro -d 2
echo q | make_ndx -f protein.gro -o protein.ndx

~/lib/lambada/lambada_beta3/lambada --iprot protein.gro --ipndx protein.ndx --imemb pope-popc.17x17.gro --imndx pope-popc.17x17.ndx --ogro protein_pope-popc.gro --orient



# Remove water molecules.
gedit delwater.make_ndx.answers
make_ndx -f ../pope-popc/pope-popc.17x17.gro -o pope-popc.17x17.withwater.ndx <delwater.make_ndx.answers
echo 7 | editconf -f ../pope-popc/pope-popc.17x17.gro -n pope-popc.17x17.ndx -o pope-popc.17x17.gro
echo q | make_ndx -f pope-popc.17x17.gro -o pope-popc.17x17.ndx


cp ../pope-popc/*.itp .
gedit kcsa.top
cp ~/lib/inflategro/inflategro2b9/deflate.mdp .
# Combine for InflateGRO2 both lipid types to one group (14 | 15).
gedit make_ndx.answers
make_ndx -f protein_pope-popc.gro -o protein_pope-popc.ndx <make_ndx.answers
cp ~/lib/inflategro/inflategro2b9/deflate.mdp .

# Before executing InflateGRO2 with its internal defalting routine, you should check if your topology is compatible with coordinates, by using grompp.

~/lib/inflategro/inflategro2b9/inflategro2 -f protein_pope-popc.gro -n protein_pope-popc.ndx -p kcsa.top -m deflate.mdp -v